# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Inicia script 
        run: echo Ola Oracle!

      - name: 'Cria o arquivo de configuracao com base no OCI'
        run: |
          mkdir ~/.oci
          echo "${{secrets.CONFIG}}" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
          echo "${{secrets.ID_RSA}}" >> ~/.oci/id_rsa.pub

      - name: 'Instalar OCI CLI'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "::add-path::/home/runner/bin"
          exec -l $SHELL

      - name: 'Corrigir permissoes de arquivos criados'
        run: |
          oci setup repair-file-permissions --file /home/runner/.oci/config
          oci setup repair-file-permissions --file /home/runner/.oci/key.pem

      - name: 'Criar uma instancia'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo "::set-output name=INSTANCE_OCID::$( oci compute instance launch --ssh-authorized-keys-file ~/.oci/id_rsa.pub --availability-domain "AHhM:US-ASHBURN-AD-1" --compartment-id ocid1.tenancy.oc1..aaaaaaaaqqzek25x6oc72fsf7pl5pxqipakzcual27u6db3njlq76p7jopna --shape "VM.Standard.E2.1" --display-name "CriadoDesdeGitHub" --image-id ocid1.image.oc1.iad.aaaaaaaatwjeakck3drug6mmutcz3msodjse56qxdtwnvehldu7yds66r2wq --subnet-id ocid1.subnet.oc1.iad.aaaaaaaai4plgbyqizswvrf7genqrijqks5ydx3grc4ea2cuvofcndx3krga --wait-for-state RUNNING --raw-output)"
          echo ID da instancia...
          echo "${{ steps.vars.outputs.INSTANCE_OCID }}"
          echo deveria ter mostrado
          
      - name: 'Obter IP Externo'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo ${{env.INSTANCE_OCID}}
          echo "::set-env name=INSTANCE_HOST::$( \
            oci compute instance list-vnics \
            --instance-id ${{env.INSTANCE_OCID}} \
            --query 'data [0]."public-ip"' \
            --raw-output \
          )"
          
      - name: 'Validar o acesso via SSH'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          while ! nc -w5 -z ${{ env.INSTANCE_HOST }} 22; do
                  sleep 5
                  echo "SSH not available..."
          done; echo "SSH ready!"
      
      - name: 'Testar Comando SSH'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: opc
          key: ${{ secrets.ID_RSA_PRIV}} 
          port: 22
          script: whoami
    
          
